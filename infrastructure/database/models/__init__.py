"""
Key Models and Relationships

    Router
        Represents a network router.
        Attributes: hostname, api_port, username, password, use_ssl, max_peers, current_peers, is_active.
        Relationships:
            interfaces: One-to-many relationship with the Interface model.

    Interface
        Represents a network interface on a router.
        Attributes: router_id, country_id, interface_name, public_key, listen_port, network_subnet, service_type, country_code, max_peers, current_peers, is_active.
        Relationships:
            router: Many-to-one relationship with the Router model.
            services: One-to-many relationship with the Service model.

    Seller
        Represents a seller or reseller in the system.
        Attributes: chat_id, username, full_name, user_role, debt_limit, current_debt, total_profit, discount_percent, total_services, active_services, is_active, auto_suspend, status.
        Relationships:
            services: One-to-many relationship with the Service model.
            transactions: One-to-many relationship with the Transaction model.
            referral_links: One-to-many relationship with the ReferralLink model.

    ReferralLink
        Represents a referral link created by a seller.
        Attributes: created_by, seller_id, code, expires_at, max_uses, used_count, is_active.
        Relationships:
            seller: Many-to-one relationship with the Seller model.

    Service
        Represents a service provided to a customer.
        Attributes: seller_id, tariff_id, interface_id, peer_id, purchase_date, activation_date, expiry_date, deletion_date, status, original_price, seller_price.
        Relationships:
            seller: Many-to-one relationship with the Seller model.
            tariff: Many-to-one relationship with the Tariff model.
            interface: Many-to-one relationship with the Interface model.
            peer: One-to-one relationship with the Peer model.
            transactions: One-to-many relationship with the Transaction model.

    Peer
        Represents a peer in the network.
        Attributes: private_key, public_key, allocated_ip, dns_servers, qr_code, config_file, peer_comment.
        Relationships:
            service: One-to-one relationship with the Service model.

    Tariff
        Represents a pricing plan or tariff for services.
        Attributes: service_type, country_code, duration_days, price, description.
        Relationships:
            services: One-to-many relationship with the Service model.
            country: Many-to-one relationship with the Country model.

    Country
        Represents a country.
        Attributes: code, name, is_available.
        Relationships:
            tariffs: One-to-many relationship with the Tariff model.
            interfaces: One-to-many relationship with the Interface model.

    Transaction
        Represents a financial transaction.
        Attributes: seller_id, service_id, amount, transaction_type, description.
        Relationships:
            seller: Many-to-one relationship with the Seller model.
            service: Many-to-one relationship with the Service model.

Enums

    ServiceType: Defines types of services (DYNAMIC, FIXED).
    SellerStatus: Defines the status of a seller (PENDING, APPROVED, SUSPENDED, BANNED).
    UserRole: Defines the role of a user (ADMIN, RESELLER).
    ServiceStatus: Defines the status of a service (PENDING, ACTIVE, EXPIRED, DELETED).
    TransactionType: Defines types of transactions (PURCHASE, SETTLEMENT).

Relationships Overview

    Router ↔ Interface: One-to-many.
    Interface ↔ Service: One-to-many.
    Seller ↔ Service: One-to-many.
    Seller ↔ Transaction: One-to-many.
    Seller ↔ ReferralLink: One-to-many.
    Service ↔ Peer: One-to-one.
    Service ↔ Tariff: Many-to-one.
    Tariff ↔ Country: Many-to-one.
    Country ↔ Interface: One-to-many.

Additional Notes:

    The models use UUIDs as primary keys, which are generated by the database (gen_random_uuid()).
    The TimestampMixin and TableNameMixin provide common fields like created_at, updated_at, and table naming conventions.
    The Enum types enforce specific sets of values for certain fields, ensuring data integrity.
"""

from .base import Base, TableNameMixin, TimestampMixin
from .countries import Country
from .interfaces import Interface
from .peers import Peer
from .referral_links import ReferralLink
from .routers import Router
from .sellers import Seller, SellerStatus, UserRole
from .services import Service, ServiceStatus
from .tariffs import Tariff, ServiceType
from .transactions import Transaction, TransactionType

__all__ = [
    # Base classes
    "Base",
    "TableNameMixin",
    "TimestampMixin",
    # Models
    "Router",
    "Interface",
    "Seller",
    "ReferralLink",
    "Service",
    "Peer",
    "Tariff",
    "Country",
    "Transaction",
    # Enums
    "SellerStatus",
    "UserRole",
    "ServiceStatus",
    "ServiceType",
    "TransactionType",
]
